import org.bukkit.Bukkit;
import org.bukkit.Location;
import org.bukkit.Material;
import org.bukkit.block.Block;
import org.bukkit.block.Chest;
import org.bukkit.entity.Player;
import org.bukkit.event.EventHandler;
import org.bukkit.event.Listener;
import org.bukkit.event.entity.PlayerDeathEvent;
import org.bukkit.inventory.ItemStack;
import org.bukkit.plugin.java.JavaPlugin;

public class DeathChestPlugin extends JavaPlugin implements Listener {

    @Override
    public void onEnable() {
        // 注册监听器
        Bukkit.getPluginManager().registerEvents(this, this);
    }

    @Override
    public void onDisable() {
        // 清理资源或执行停用时的操作
    }

    @EventHandler
    public void onPlayerDeath(PlayerDeathEvent event) {
        Player player = event.getEntity();
        Location deathLocation = player.getLocation();
        Block deathBlock = deathLocation.getBlock();

        if (isLocationSafeForChest(deathLocation)) {
            // 清空玩家背包
            clearPlayerInventory(player);
            // 创建箱子
            createChest(deathLocation);
            // 将物品放入箱子
            moveItemsToChest(player, deathBlock);
        }
    }

    private boolean isLocationSafeForChest(Location location) {
        // 检查箱子放置位置是否为空气，且下方为实心方块
        Block potentialChest = location.getBlock().getRelative(0, -1, 0);
        return potentialChest.getType() == Material.AIR && potentialChest.getRelative(0, 1, 0).getType().isSolid();
    }

    private void createChest(Location location) {
        // 设置箱子方块
        Block chestBlock = location.getBlock().getRelative(0, -1, 0);
        chestBlock.setType(Material.CHEST);
    }

    private void moveItemsToChest(Player player, Block chestBlock) {
        // 确保方块是箱子
        if (chestBlock.getState() instanceof Chest) {
            Chest chest = (Chest) chestBlock.getState();
            chest.getBlockInventory().setContents(player.getInventory().getContents());
        }
    }

    private void clearPlayerInventory(Player player) {
        // 清空玩家的物品栏
        player.getInventory().clear();
    }
}