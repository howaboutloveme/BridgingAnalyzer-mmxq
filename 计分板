import org.bukkit.Bukkit;
import org.bukkit.ChatColor;
import org.bukkit.command.Command;
import org.bukkit.command.CommandSender;
import org.bukkit.event.EventHandler;
import org.bukkit.event.Listener;
import org.bukkit.event.player.PlayerJoinEvent;
import org.bukkit.plugin.java.JavaPlugin;
import org.bukkit.scoreboard.*;

import java.util.HashMap;
import java.util.Map;

public class CatPlanetScoreboard extends JavaPlugin implements Listener {

    // 初始化分数板、目标、以及一个Map来跟踪队伍
    private Scoreboard board;
    private Objective obj;
    private Map<String, Team> teams = new HashMap<>();
    
    // 定义分数板的标题和内容
    private String title = "猫猫星球";
    private String content = "欢迎游玩";

    @Override
    public void onEnable() {
        // 设置分数板和注册事件监听
        setupScoreboard();
        // 注册这个插件为事件监听者
        Bukkit.getPluginManager().registerEvents(this, this);

        // 注册一个监听器，当玩家加入时自动将他们添加到分数板
        getServer().getPluginManager().registerEvents(new PlayerJoinListener(), this);
    }

    // 这个方法设置分数板、目标、和队伍
    private void setupScoreboard() {
        board = Bukkit.getScoreboardManager().getNewScoreboard();
        // 创建一个目标，类型为"dummy"，因为分数板不会展示实际的得分
        obj = board.registerNewObjective("catPlanet", "dummy");
        // 设置目标的显示位置和显示的名称
        obj.setDisplaySlot(DisplaySlot.SIDEBAR);
        obj.setDisplayName(title);

        // 创建一个新队伍，并设置前缀
        Team team = board.registerNewTeam("teamWelcome");
        team.setPrefix(content);

        // 将队伍添加到Map
        teams.put("teamWelcome", team);

        // 遍历所有在线玩家，添加到队伍，并设置他们的分数板为新分数板
        Bukkit.getOnlinePlayers().forEach(player -> {
            team.addEntry(player.getName());
            player.setScoreboard(board);
        });
    }

    // 新监听器类，用于处理PlayerJoinEvent
    private class PlayerJoinListener implements Listener {
        @EventHandler
        public void onPlayerJoin(PlayerJoinEvent event) {
            // 当玩家加入时，将他们添加到队伍中，并设置其分数板为插件的分数板
            Team team = teams.get("teamWelcome");
            if (team != null) {
                team.addEntry(event.getPlayer().getName());
                event.getPlayer().setScoreboard(board);
            }
        }
    }
}