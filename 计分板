import org.bukkit.Bukkit;
import org.bukkit.ChatColor;
import org.bukkit.command.Command;
import org.bukkit.command.CommandSender;
import org.bukkit.event.EventHandler;
import org.bukkit.event.Listener;
import org.bukkit.event.player.PlayerJoinEvent;
import org.bukkit.plugin.java.JavaPlugin;
import org.bukkit.scoreboard.*;

import java.util.HashMap;
import java.util.Map;

public class CatPlanetScoreboard extends JavaPlugin implements Listener {

    // 初始化分数板、目标、以及一个Map来跟踪队伍
    private Scoreboard board;
    private Objective obj;
    private Map<String, Team> teams = new HashMap<>();
    
    // 定义分数板的标题和内容
    private String title = "猫猫星球";
    private String content = "欢迎游玩";

    @Override
    public void onEnable() {
        setupScoreboard();
        Bukkit.getPluginManager().registerEvents(this, this);
        getServer().getPluginManager().registerEvents(new PlayerJoinListener(), this);
    }

    // 这个方法设置分数板、目标、和队伍
    private void setupScoreboard() {
        board = Bukkit.getScoreboardManager().getNewScoreboard();
        obj = board.registerNewObjective("catPlanet", "dummy");
        obj.setDisplaySlot(DisplaySlot.SIDEBAR);
        obj.setDisplayName(title);

        Team team = board.registerNewTeam("teamWelcome");
        team.setPrefix(content);
        teams.put("teamWelcome", team);

        Bukkit.getOnlinePlayers().forEach(player -> {
            team.addEntry(player.getName());
            player.setScoreboard(board);
        });

        // 初始化分数板内容
        updateScoreboard();
    }

    // 更新分数板显示的内容
    private void updateScoreboard() {
        // 清除旧的行
        for (int i = 15; i >= 1; i--) {
            obj.getScore(ChatColor.DARK_GRAY + " ").setScore(i);
        }

        // 添加新行
        addScoreboardLine("欢迎来到猫猫星球！", 15);
        addScoreboardLine("开始你的冒险吧！", 14);
        addScoreboardLine("收集资源，建立基地！", 13);
        addScoreboardLine("与怪物战斗，保护你的家园！", 12);
        addScoreboardLine("与其他玩家互动和交易！", 11);
    }

    // 添加行到分数板
    private void addScoreboardLine(String text, int position) {
        Score score = obj.getScore(ChatColor.AQUA + text);
        score.setScore(position);
    }

    // 新监听器类，用于处理PlayerJoinEvent
    private class PlayerJoinListener implements Listener {
        @EventHandler
        public void onPlayerJoin(PlayerJoinEvent event) {
            Team team = teams.get("teamWelcome");
            if (team != null) {
                team.addEntry(event.getPlayer().getName());
                event.getPlayer().setScoreboard(board);
                // 每次有玩家加入时更新分数板
                updateScoreboard();
            }
        }
    }
}